<?php


/**
 * This is the model base class for the table "{{favourite}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Favourite".
 *
 * Columns in table "{{favourite}}" available as properties of the model,
 * followed by relations of table "{{favourite}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $job_id
 * @property integer $state_id
 * @property integer $type_id
 * @property integer $create_user_id
 * @property string $create_time
 *
 * @property Job $job
 * @property User $createUser
 */
abstract class BaseFavourite extends GxActiveRecord {
	const TYPE_ADVERTISEMENT = 1;
	const TYPE_REQUEST = 2;
	public static function getStatusOptions($id = null) {
		$list = array (
				"Draft",
				"Published",
				"Archive" 
		);
		if ($id == null)
			return $list;
		if (is_numeric ( $id ))
			return $list [$id];
		return $id;
	}
	public static function getTypeOptions($id = null) {
		$list = array (
				"TYPE1",
				"TYPE2",
				"TYPE3" 
		);
		if ($id == null)
			return $list;
		if (is_numeric ( $id ))
			return $list [$id];
		return $id;
	}
	public function beforeValidate() {
		if ($this->isNewRecord) {
			if (! isset ( $this->create_user_id ))
				$this->create_user_id = Yii::app ()->user->id;
			if (! isset ( $this->create_time ))
				$this->create_time = date ( 'Y-m-d H:i:s' );
		} else {
		}
		return parent::beforeValidate ();
	}
	public static function model($className = __CLASS__) {
		return parent::model ( $className );
	}
	public function tableName() {
		return '{{favourite}}';
	}
	public static function label($n = 1) {
		return Yii::t ( 'app', 'Favourite|Favourites', $n );
	}
	public static function representingColumn() {
		return 'create_time';
	}
	public function rules() {
		return array (
				array (
						'job_id, create_user_id',
						'required' 
				),
				array (
						'job_id, state_id, type_id, create_user_id',
						'numerical',
						'integerOnly' => true 
				),
				array (
						'create_time',
						'safe' 
				),
				array (
						'state_id, type_id, create_time',
						'default',
						'setOnEmpty' => true,
						'value' => null 
				),
				array (
						'id, job_id, state_id, type_id, create_user_id, create_time',
						'safe',
						'on' => 'search' 
				) 
		);
	}
	public function relations() {
		return array (
				'job' => array (
						self::BELONGS_TO,
						'Job',
						'job_id' 
				),
				'createUser' => array (
						self::BELONGS_TO,
						'User',
						'create_user_id' 
				) 
		);
	}
	public function pivotModels() {
		return array ();
	}
	public function attributeLabels() {
		return array (
				'id' => Yii::t ( 'app', 'ID' ),
				'job_id' => null,
				'state_id' => Yii::t ( 'app', 'State' ),
				'type_id' => Yii::t ( 'app', 'Type' ),
				'create_user_id' => null,
				'create_time' => Yii::t ( 'app', 'Create Time' ),
				'job' => null,
				'createUser' => null 
		);
	}
	public function search() {
		$criteria = new CDbCriteria ();
		
		$criteria->compare ( 'id', $this->id );
		$criteria->compare ( 'job_id', $this->job_id );
		$criteria->compare ( 'state_id', $this->state_id );
		$criteria->compare ( 'type_id', $this->type_id );
		$criteria->compare ( 'create_user_id', $this->create_user_id );
		$criteria->compare ( 'create_time', $this->create_time, true );
		
		return new CActiveDataProvider ( $this, array (
				'criteria' => $criteria 
		) );
	}
}