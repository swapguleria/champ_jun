<?php


 
/**
 * This is the model base class for the table "{{comment}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Comment".
 *
 * Columns in table "{{comment}}" available as properties of the model,
 * followed by relations of table "{{comment}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $model_id
 * @property string $model_type
 * @property string $comment
 * @property double $rate
 * @property integer $state_id
 * @property string $create_time
 * @property integer $create_user_id
 *
 * @property User $createUser
 */
abstract class BaseComment extends GxActiveRecord {

	
	public static function getStatusOptions($id = null)
	{
		$list = array("Draft","Published","Archive");
		if ($id == null )	return $list;
		if ( is_numeric( $id )) return $list [ $id ];
		return $id;
	}	
	public function beforeValidate()
	{
		if($this->isNewRecord)
		{
			if ( !isset( $this->create_time )) $this->create_time = date( 'Y-m-d H:i:s');
			if ( !isset( $this->create_user_id )) $this->create_user_id = Yii::app()->user->id;			
	}else{
				}
		return parent::beforeValidate();
	}

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{comment}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Comment|Comments', $n);
	}

	public static function representingColumn() {
		return 'model_type';
	}

	public function rules() {
		return array(
			array('model_id, model_type', 'required'),
			array('model_id, state_id, create_user_id', 'numerical', 'integerOnly'=>true),
			array('rate', 'numerical'),
			array('model_type', 'length', 'max'=>255),
			array('comment, create_time', 'safe'),
			array('comment, rate, state_id, create_time, create_user_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, model_id, model_type, comment, rate, state_id, create_time, create_user_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'createUser' => array(self::BELONGS_TO, 'User', 'create_user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'model_id' => Yii::t('app', 'Model'),
			'model_type' => Yii::t('app', 'Model Type'),
			'comment' => Yii::t('app', 'Comment'),
			'rate' => Yii::t('app', 'Rate'),
			'state_id' => Yii::t('app', 'State'),
			'create_time' => Yii::t('app', 'Create Time'),
			'create_user_id' => null,
			'createUser' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('model_id', $this->model_id);
		$criteria->compare('model_type', $this->model_type, true);
		$criteria->compare('comment', $this->comment, true);
		$criteria->compare('rate', $this->rate);
		$criteria->compare('state_id', $this->state_id);
		$criteria->compare('create_time', $this->create_time, true);
		$criteria->compare('create_user_id', $this->create_user_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}