<?php

/**
 * This is the model base class for the table "{{book_page}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "BookPage".
 *
 * Columns in table "{{book_page}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $tab_1_title
 * @property string $tab_2_title
 * @property string $tab_1_image
 * @property string $tab_2_image
 * @property string $tab_1_desc
 * @property string $tab_2_desc
 * @property string $button_2_text
 * @property string $button_1_text
 * @property string $image_right
 * @property string $image_left
 * @property string $subscribe
 * @property string $img_tr
 * @property string $title_tr
 * @property string $tag_line_tr
 * @property string $map_title_tr
 * @property string $map_content_tr
 * @property string $page_title_tr
 * @property string $page_tag_line_tr
 * @property string $desc_tr
 * @property string $description
 * @property string $cnf_descp
 * @property string $cnf_checkbox_text
 * @property string $cnf_btn_text
 * @property string $thankyou_title
 * @property string $thankyou_tagline
 * @property string $thankyou_descp
 * @property string $thankyou_cancel_button
 * @property string $cancel_title
 * @property string $cancel_tagline
 * @property string $cancel_descp
 * @property integer $extra_text_1
 * @property integer $extra_text_2
 * @property integer $extra_text_3
 * @property string $extra_textarea_1
 * @property string $extra_textarea_2
 * @property string $extra_textarea_3
 * @property integer $state_id
 * @property integer $type_id
 * @property string $create_time
 * @property string $update_time
 * @property integer $create_user_id
 *
 */
abstract class BaseBookPage extends GxActiveRecord
    {

    public static function getStatusOptions($id = null)
        {
        $list = array("Draft", "Published", "Archive");
        if ($id == null) return $list;
        if (is_numeric($id)) return $list [$id];
        return $id;
        }

    public static function getTypeOptions($id = null)
        {
        $list = array("TYPE1", "TYPE2", "TYPE3");
        if ($id == null) return $list;
        if (is_numeric($id)) return $list [$id];
        return $id;
        }

    public function beforeValidate()
        {
        if ($this->isNewRecord)
            {
            if (!isset($this->create_time)) $this->create_time = date('Y-m-d H:i:s');
            if (!isset($this->create_user_id)) $this->create_user_id = Yii::app()->user->id;
            }else
            {
            
            }
        return parent::beforeValidate();
        }

    public static function model($className = __CLASS__)
        {
        return parent::model($className);
        }

    public function tableName()
        {
        return '{{book_page}}';
        }

    public static function label($n = 1)
        {
        return Yii::t('app', 'Book Page|Book Pages', $n);
        }

    public static function representingColumn()
        {
        return 'tab_1_title';
        }

    public function rules()
        {
        return array(
            array('tab_1_title, create_user_id', 'required'),
//			array('tab_1_title, tab_2_title, tab_1_image, tab_2_image, tab_1_desc, tab_2_desc, button_2_text, button_1_text, image_right, image_left, img_tr, title_tr, tag_line_tr, map_title_tr, map_content_tr, page_title_tr, page_tag_line_tr, desc_tr, description, cnf_descp, cnf_checkbox_text, cnf_btn_text, thankyou_title, thankyou_tagline, thankyou_descp, thankyou_cancel_button, cancel_title, cancel_tagline, cancel_descp, extra_text_1, extra_text_2, extra_text_3, extra_textarea_1, extra_textarea_2, extra_textarea_3, state_id, type_id, create_time, update_time, create_user_id', 'required'),
            array('extra_text_1, extra_text_2, extra_text_3, state_id, type_id, create_user_id', 'numerical', 'integerOnly' => true),
            array('tab_1_title, tab_2_title, tab_1_image, tab_1_desc, tab_2_desc,tab_2_image, button_2_text, button_1_text, image_right, image_left, img_tr, title_tr, tag_line_tr, map_title_tr,map_content_tr, page_title_tr, page_tag_line_tr, desc_tr, cnf_descp, cnf_checkbox_text, cnf_btn_text, thankyou_title, thankyou_tagline, thankyou_cancel_button, cancel_title, cancel_tagline, extra_textarea_1, extra_textarea_2, subscribe,extra_textarea_3', 'length', 'max' => 255),
//			array('subscribe', 'length', 'max'=>1),
//			array('subscribe', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, tab_1_title, tab_2_title, tab_1_image, tab_2_image, tab_1_desc, tab_2_desc, button_2_text, button_1_text, image_right, image_left, subscribe, img_tr, title_tr, tag_line_tr, map_title_tr, map_content_tr, page_title_tr, page_tag_line_tr, desc_tr, description, cnf_descp, cnf_checkbox_text, cnf_btn_text, thankyou_title, thankyou_tagline, thankyou_descp, thankyou_cancel_button, cancel_title, cancel_tagline, cancel_descp, extra_text_1, extra_text_2, extra_text_3, extra_textarea_1, extra_textarea_2, extra_textarea_3, state_id, type_id, create_time, update_time, create_user_id', 'safe', 'on' => 'search'),
        );
        }

    public function relations()
        {
        return array(
        );
        }

    public function pivotModels()
        {
        return array(
        );
        }

    public function attributeLabels()
        {
        return array(
            'id' => Yii::t('app', 'ID'),
            'tab_1_title' => Yii::t('app', 'Tab 1 Title'),
            'tab_2_title' => Yii::t('app', 'Tab 2 Title'),
            'tab_1_image' => Yii::t('app', 'Tab 1 Image'),
            'tab_2_image' => Yii::t('app', 'Tab 2 Image'),
            'tab_1_desc' => Yii::t('app', 'Tab 1 Desc'),
            'tab_2_desc' => Yii::t('app', 'Tab 2 Desc'),
            'button_2_text' => Yii::t('app', 'Button 2 Text'),
            'button_1_text' => Yii::t('app', 'Button 1 Text'),
            'image_right' => Yii::t('app', 'Image Right'),
            'image_left' => Yii::t('app', 'Image Left'),
            'subscribe' => Yii::t('app', 'Subscribe'),
            'img_tr' => Yii::t('app', 'Img Tr'),
            'title_tr' => Yii::t('app', 'Title Tr'),
            'tag_line_tr' => Yii::t('app', 'Tag Line Tr'),
            'map_title_tr' => Yii::t('app', 'Map Title Tr'),
            'map_content_tr' => Yii::t('app', 'Map Content Tr'),
            'page_title_tr' => Yii::t('app', 'Page Title Tr'),
            'page_tag_line_tr' => Yii::t('app', 'Page Tag Line Tr'),
            'desc_tr' => Yii::t('app', 'Desc Tr'),
            'description' => Yii::t('app', 'Description'),
            'cnf_descp' => Yii::t('app', 'Cnf Descp'),
            'cnf_checkbox_text' => Yii::t('app', 'Cnf Checkbox Text'),
            'cnf_btn_text' => Yii::t('app', 'Cnf Btn Text'),
            'thankyou_title' => Yii::t('app', 'Thankyou Title'),
            'thankyou_tagline' => Yii::t('app', 'Thankyou Tagline'),
            'thankyou_descp' => Yii::t('app', 'Thankyou Descp'),
            'thankyou_cancel_button' => Yii::t('app', 'Thankyou Cancel Button'),
            'cancel_title' => Yii::t('app', 'Cancel Title'),
            'cancel_tagline' => Yii::t('app', 'Cancel Tagline'),
            'cancel_descp' => Yii::t('app', 'Cancel Descp'),
            'extra_text_1' => Yii::t('app', 'Extra Text 1'),
            'extra_text_2' => Yii::t('app', 'Extra Text 2'),
            'extra_text_3' => Yii::t('app', 'Extra Text 3'),
            'extra_textarea_1' => Yii::t('app', 'Extra Textarea 1'),
            'extra_textarea_2' => Yii::t('app', 'Extra Textarea 2'),
            'extra_textarea_3' => Yii::t('app', 'Extra Textarea 3'),
            'state_id' => Yii::t('app', 'State'),
            'type_id' => Yii::t('app', 'Type'),
            'create_time' => Yii::t('app', 'Create Time'),
            'update_time' => Yii::t('app', 'Update Time'),
            'create_user_id' => Yii::t('app', 'Create User'),
        );
        }

    public function search()
        {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('tab_1_title', $this->tab_1_title, true);
        $criteria->compare('tab_2_title', $this->tab_2_title, true);
        $criteria->compare('tab_1_image', $this->tab_1_image, true);
        $criteria->compare('tab_2_image', $this->tab_2_image, true);
        $criteria->compare('tab_1_desc', $this->tab_1_desc, true);
        $criteria->compare('tab_2_desc', $this->tab_2_desc, true);
        $criteria->compare('button_2_text', $this->button_2_text, true);
        $criteria->compare('button_1_text', $this->button_1_text, true);
        $criteria->compare('image_right', $this->image_right, true);
        $criteria->compare('image_left', $this->image_left, true);
        $criteria->compare('subscribe', $this->subscribe, true);
        $criteria->compare('img_tr', $this->img_tr, true);
        $criteria->compare('title_tr', $this->title_tr, true);
        $criteria->compare('tag_line_tr', $this->tag_line_tr, true);
        $criteria->compare('map_title_tr', $this->map_title_tr, true);
        $criteria->compare('map_content_tr', $this->map_content_tr, true);
        $criteria->compare('page_title_tr', $this->page_title_tr, true);
        $criteria->compare('page_tag_line_tr', $this->page_tag_line_tr, true);
        $criteria->compare('desc_tr', $this->desc_tr, true);
        $criteria->compare('description', $this->description, true);
        $criteria->compare('cnf_descp', $this->cnf_descp, true);
        $criteria->compare('cnf_checkbox_text', $this->cnf_checkbox_text, true);
        $criteria->compare('cnf_btn_text', $this->cnf_btn_text, true);
        $criteria->compare('thankyou_title', $this->thankyou_title, true);
        $criteria->compare('thankyou_tagline', $this->thankyou_tagline, true);
        $criteria->compare('thankyou_descp', $this->thankyou_descp, true);
        $criteria->compare('thankyou_cancel_button', $this->thankyou_cancel_button, true);
        $criteria->compare('cancel_title', $this->cancel_title, true);
        $criteria->compare('cancel_tagline', $this->cancel_tagline, true);
        $criteria->compare('cancel_descp', $this->cancel_descp, true);
        $criteria->compare('extra_text_1', $this->extra_text_1);
        $criteria->compare('extra_text_2', $this->extra_text_2);
        $criteria->compare('extra_text_3', $this->extra_text_3);
        $criteria->compare('extra_textarea_1', $this->extra_textarea_1, true);
        $criteria->compare('extra_textarea_2', $this->extra_textarea_2, true);
        $criteria->compare('extra_textarea_3', $this->extra_textarea_3, true);
        $criteria->compare('state_id', $this->state_id);
        $criteria->compare('type_id', $this->type_id);
        $criteria->compare('create_time', $this->create_time, true);
        $criteria->compare('update_time', $this->update_time, true);
        $criteria->compare('create_user_id', $this->create_user_id);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
        }

    }
