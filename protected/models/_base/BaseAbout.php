<?php

 
/**
 * This is the model base class for the table "{{about}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "About".
 *
 * Columns in table "{{about}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $tab_1_title
 * @property string $tab_1_sub_title
 * @property string $tab_1_image
 * @property string $tab_2_title
 * @property string $tab_2_sub_title
 * @property string $tab_2_description
 * @property string $tab_2_image
 * @property string $box_1_image_logo
 * @property string $box_1_title
 * @property string $box_1_description
 * @property string $box_2_image_logo
 * @property string $box_2_title
 * @property string $box_2_description
 * @property string $box_3_image_logo
 * @property string $box_3_title
 * @property string $box_3_description
 * @property string $tab_4_title
 * @property string $tab_4_sub_title
 * @property integer $state_id
 * @property integer $type_id
 * @property string $create_time
 * @property string $update_time
 * @property integer $create_user_id
 *
 */
abstract class BaseAbout extends GxActiveRecord {

	
	public static function getStatusOptions($id = null)
	{
		$list = array("Draft","Published","Archive");
		if ($id == null )	return $list;
		if ( is_numeric( $id )) return $list [ $id ];
		return $id;
	}	
	public static function getTypeOptions($id = null)
	{
		$list = array("TYPE1","TYPE2","TYPE3");
		if ($id == null )	return $list;
		if ( is_numeric( $id )) return $list [ $id ];
		return $id;
	}
 	public function beforeValidate()
	{
		if($this->isNewRecord)
		{
			if ( !isset( $this->create_time )) $this->create_time = date( 'Y-m-d H:i:s');
				if ( !isset( $this->create_user_id )) $this->create_user_id = Yii::app()->user->id;			
	}else{
					}
		return parent::beforeValidate();
	}

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{about}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'About|Abouts', $n);
	}

	public static function representingColumn() {
		return 'tab_1_title';
	}

	public function rules() {
		return array(
			array('tab_2_title, tab_2_sub_title, tab_2_description, tab_2_image, box_1_image_logo, box_1_title, box_1_description, box_2_image_logo, box_2_title, box_2_description, box_3_image_logo, box_3_title, box_3_description, tab_4_title, tab_4_sub_title, create_time, create_user_id', 'required'),
			array('create_user_id', 'numerical', 'integerOnly'=>true),
			array('tab_1_title, tab_1_sub_title, tab_1_image, tab_2_title, tab_2_sub_title, tab_2_image, box_1_image_logo, box_1_title, box_1_description, box_2_image_logo, box_2_title, box_2_description, box_3_image_logo, box_3_title, box_3_description, tab_4_title, tab_4_sub_title', 'length', 'max'=>255),
			array('id, tab_1_title, tab_1_sub_title, tab_1_image, tab_2_title, tab_2_sub_title, tab_2_description, tab_2_image, box_1_image_logo, box_1_title, box_1_description, box_2_image_logo, box_2_title, box_2_description, box_3_image_logo, box_3_title, box_3_description, tab_4_title, tab_4_sub_title,  create_time,  create_user_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'tab_1_title' => Yii::t('app', 'Page Title'),
			'tab_1_sub_title' => Yii::t('app', 'Page Tag Line'),
			'tab_1_image' => Yii::t('app', 'Background Image'),
			'tab_2_title' => Yii::t('app', 'Title'),
			'tab_2_sub_title' => Yii::t('app', 'Tag Line'),
			'tab_2_description' => Yii::t('app', 'Descrip.'),
			'tab_2_image' => Yii::t('app', 'Image'),
			'box_1_image_logo' => Yii::t('app', 'Image'),
			'box_1_title' => Yii::t('app', 'Title'),
			'box_1_description' => Yii::t('app', 'Descrip.'),
			'box_2_image_logo' => Yii::t('app', 'Image'),
			'box_2_title' => Yii::t('app', 'Title'),
			'box_2_description' => Yii::t('app', 'Descrip.'),
			'box_3_image_logo' => Yii::t('app', 'Image'),
			'box_3_title' => Yii::t('app', 'Title'),
			'box_3_description' => Yii::t('app', 'Descrip.'),
			'tab_4_title' => Yii::t('app', 'Our Team Title'),
			'tab_4_sub_title' => Yii::t('app', 'Our Team Tag Line'),
			'state_id' => Yii::t('app', 'State'),
			'type_id' => Yii::t('app', 'Type'),
			'create_time' => Yii::t('app', 'Create Time'),
			'update_time' => Yii::t('app', 'Update Time'),
			'create_user_id' => Yii::t('app', 'Create User'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('tab_1_title', $this->tab_1_title, true);
		$criteria->compare('tab_1_sub_title', $this->tab_1_sub_title, true);
		$criteria->compare('tab_1_image', $this->tab_1_image, true);
		$criteria->compare('tab_2_title', $this->tab_2_title, true);
		$criteria->compare('tab_2_sub_title', $this->tab_2_sub_title, true);
		$criteria->compare('tab_2_description', $this->tab_2_description, true);
		$criteria->compare('tab_2_image', $this->tab_2_image, true);
		$criteria->compare('box_1_image_logo', $this->box_1_image_logo, true);
		$criteria->compare('box_1_title', $this->box_1_title, true);
		$criteria->compare('box_1_description', $this->box_1_description, true);
		$criteria->compare('box_2_image_logo', $this->box_2_image_logo, true);
		$criteria->compare('box_2_title', $this->box_2_title, true);
		$criteria->compare('box_2_description', $this->box_2_description, true);
		$criteria->compare('box_3_image_logo', $this->box_3_image_logo, true);
		$criteria->compare('box_3_title', $this->box_3_title, true);
		$criteria->compare('box_3_description', $this->box_3_description, true);
		$criteria->compare('tab_4_title', $this->tab_4_title, true);
		$criteria->compare('tab_4_sub_title', $this->tab_4_sub_title, true);
		$criteria->compare('state_id', $this->state_id);
		$criteria->compare('type_id', $this->type_id);
		$criteria->compare('create_time', $this->create_time, true);
		$criteria->compare('update_time', $this->update_time, true);
		$criteria->compare('create_user_id', $this->create_user_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}