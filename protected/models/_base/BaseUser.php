<?php

/**
 */

/**
 * This is the model base class for the table "{{user}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "User".
 *
 * Columns in table "{{user}}" available as properties of the model,
 * followed by relations of table "{{user}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $first_name
 * @property string $last_name
 * @property string $email
 * @property string $password
 * @property string $phone_no
 * @property string $language
 * @property string $nationality
 * @property string $date_of_birth
 * @property integer $work_in_abroad
 * @property integer $salary
 * @property integer $martial_status
 * @property string $employment
 * @property double $experience
 * @property string $religion
 * @property string $address
 * @property string $city
 * @property string $country
 * @property integer $zip_code
 * @property integer $currency_type
 * @property string $timezone
 * @property string $about_me
 * @property string $image_file
 * @property string $lat
 * @property string $long
 * @property integer $tos
 * @property integer $role_id
 * @property integer $state_id
 * @property string $last_visit_time
 * @property string $activation_key
 * @property integer $login_error_count
 * @property integer $employer_id
 * @property integer $create_user_id
 * @property string $create_time
 *
 * @property AuthSession[] $authSessions
 * @property Blog[] $blogs
 * @property Comment[] $comments
 * @property Favourite[] $favourites
 * @property JobEmployer[] $jobEmployers
 * @property Menu[] $menus
 * @property Message[] $messages
 * @property Message[] $messages1
 * @property Page[] $pages
 * @property Service[] $services
 * @property UserEmail[] $userEmails
 * @property UserPlan[] $userPlans
 * @property UserSkill[] $userSkills
 */
abstract class BaseUser extends GxActiveRecord
    {

    public $password_2;
    public $verifyCode = null;
    public $push_state = 1;
    public $rememberMe;
    public $new_password = null;

    const EMAIL_VERIFIED = 1;
    const EMAIL_NOT_VERIFIED = 0;
    const STATE_INACTIVE = 0;
    const STATE_ACTIVE = 1;
    const ROLE_USER = 3;
    const ROLE_EMPLOYER = 2;
    const ROLE_ADMIN = 1;
    const NOTIFICATION_ENABLE = 1;
    const NOTIFICATION_DISABLE = 0;
    const IPHONE_TYPE = 2;
    const ANDROID_TYPE = 1;

    public static function getStatusOptions($id = null)
        {
        $list = array(
            self::STATE_INACTIVE => 'Inactive',
            self::STATE_ACTIVE => 'Active'
        );
        if ($id == null) return $list;
        if (is_numeric($id)) return $list [$id];
        return $id;
        }

    public static function getLanguageOptions($id = null)
        {
        $list = array(
            self::LANG_ENG => 'English',
            self::LANG_FRENCH => 'French',
        );
        if (is_numeric($id)) return $list [$id];
        if ($id === null) return $list;

        return $id;
        }

    public function beforeValidate()
        {
        if ($this->isNewRecord)
            {
            if (!isset($this->create_user_id)) $this->create_user_id = Yii::app()->user->id;
            if (!isset($this->create_time)) $this->create_time = date('Y-m-d H:i:s');
            } else
            {
            
            }
        $this->first_name = ucwords(strtolower(trim($this->first_name)));
        $this->email = strtolower(trim($this->email));
        return parent::beforeValidate();
        }

    public static function model($className = __CLASS__)
        {
        return parent::model($className);
        }

    public function tableName()
        {
        return '{{user}}';
        }

    public static function label($n = 1)
        {
        return Yii::t('app', 'User|Users', $n);
        }

    public static function representingColumn()
        {
        return 'first_name';
        }

    public function rules()
        {
        return array(
            // array('first_name, last_name, email, password, language, nationality, date_of_birth, salary, martial_status, employment, religion, address, city, country, zip_code, currency_type, timezone, lat, long, role_id', 'required'),

            array(
                'first_name,email,username, password',
                'required'
            ),
            array(
                'work_in_abroad, salary, martial_status, zip_code, currency_type, tos, role_id, state_id, login_error_count, employer_id, create_user_id',
                'numerical',
                'integerOnly' => true
            ),
            array(
                'experience',
                'numerical'
            ),
            array(
                'first_name, last_name, language, nationality, employment, religion, address, city, country, lat, long',
                'length',
                'max' => 256
            ),
            array(
                'email',
                'length',
                'max' => 128
            ),
            array(
                'password, timezone, image_file, activation_key',
                'length',
                'max' => 512
            ),
            array(
                'phone_no',
                'length',
                'max' => 10
            ),
            array(
                'password,password_2',
                'required',
                'on' => 'changepassword'
            ),
            array(
                'password_2',
                'compare',
                'compareAttribute' => 'password',
                'on' => 'changepassword'
            ),
            array(
                'image_file',
                'file',
                'allowEmpty' => true,
                'types' => 'jpg,jpeg,gif,png'
            ),
            array(
                'email',
                'email'
            ),
            array(
                'email',
                'unique'
            ),
            array(
                'about_me,username, last_visit_time, create_time,is_notification,date_of_birth',
                'safe'
            ),
            array(
                'phone_no, work_in_abroad, experience, about_me, tos, state_id, last_visit_time, activation_key, login_error_count, employer_id, create_user_id, create_time',
                'default',
                'setOnEmpty' => true,
                'value' => null
            ),
            array(
                'id,username, first_name, last_name, email, password, phone_no, language, nationality, date_of_birth, work_in_abroad, salary, martial_status, employment, experience, religion, address, city, country, zip_code, currency_type, timezone, about_me, image_file, lat, long, tos, role_id, state_id, last_visit_time, activation_key, login_error_count, employer_id, create_user_id, create_time',
                'safe',
                'on' => 'search'
            )
        );
        }

    public function relations()
        {
        return array(
            'authSessions' => array(
                self::HAS_MANY,
                'AuthSession',
                'create_user_id'
            ),
            'authSession' => array(
                self::HAS_ONE,
                'AuthSession',
                'create_user_id'
            ),
            'blogs' => array(
                self::HAS_MANY,
                'Blog',
                'create_user_id'
            ),
            'comments' => array(
                self::HAS_MANY,
                'Comment',
                'create_user_id'
            ),
            'favourites' => array(
                self::HAS_MANY,
                'Favourite',
                'create_user_id'
            ),
            'jobEmployers' => array(
                self::HAS_MANY,
                'JobEmployer',
                'user_id'
            ),
            'menus' => array(
                self::HAS_MANY,
                'Menu',
                'create_user_id'
            ),
            'messages' => array(
                self::HAS_MANY,
                'Message',
                'from_id'
            ),
            'messages1' => array(
                self::HAS_MANY,
                'Message',
                'to_id'
            ),
            'pages' => array(
                self::HAS_MANY,
                'Page',
                'create_user_id'
            ),
            'services' => array(
                self::HAS_MANY,
                'Service',
                'create_user_id'
            ),
            'userEmails' => array(
                self::HAS_MANY,
                'UserEmail',
                'user_id'
            ),
            'userPlans' => array(
                self::HAS_MANY,
                'UserPlan',
                'create_user_id'
            ),
            'userSkills' => array(
                self::HAS_MANY,
                'UserSkill',
                'create_user_id'
            )
        );
        }

    public function pivotModels()
        {
        return array();
        }

    public function attributeLabels()
        {
        return array(
            'id' => Yii::t('app', 'ID'),
            'first_name' => Yii::t('app', 'Full Name'),
            'username' => Yii::t('app', 'User Name'),
            'last_name' => Yii::t('app', 'Last Name'),
            'email' => Yii::t('app', 'Email'),
            'password' => Yii::t('app', 'Password'),
            'password_2' => Yii::t('app', ' Retype Password'),
            'phone_no' => Yii::t('app', 'Phone No'),
            'language' => Yii::t('app', 'Language'),
            'nationality' => Yii::t('app', 'Nationality'),
            'date_of_birth' => Yii::t('app', 'Date Of Birth'),
            'work_in_abroad' => Yii::t('app', 'Work In Abroad'),
            'salary' => Yii::t('app', 'Salary'),
            'martial_status' => Yii::t('app', 'Martial Status'),
            'employment' => Yii::t('app', 'Employment'),
            'experience' => Yii::t('app', 'Experience'),
            'religion' => Yii::t('app', 'Religion'),
            'address' => Yii::t('app', 'Address'),
            'city' => Yii::t('app', 'City'),
            'country' => Yii::t('app', 'Country'),
            'zip_code' => Yii::t('app', 'Zip Code'),
            'currency_type' => Yii::t('app', 'Currency Type'),
            'timezone' => Yii::t('app', 'Timezone'),
            'about_me' => Yii::t('app', 'About Me'),
            'image_file' => Yii::t('app', 'Image File'),
            'lat' => Yii::t('app', 'Lat'),
            'long' => Yii::t('app', 'Long'),
            'tos' => Yii::t('app', 'Tos'),
            'role_id' => Yii::t('app', 'Role'),
            'state_id' => Yii::t('app', 'State'),
            'last_visit_time' => Yii::t('app', 'Last Visit Time'),
            'activation_key' => Yii::t('app', 'Activation Key'),
            'login_error_count' => Yii::t('app', 'Login Error Count'),
            'employer_id' => Yii::t('app', 'Employer'),
            'create_user_id' => Yii::t('app', 'Create User'),
            'create_time' => Yii::t('app', 'Create Time'),
            'authSessions' => null,
            'blogs' => null,
            'comments' => null,
            'favourites' => null,
            'jobEmployers' => null,
            'menus' => null,
            'messages' => null,
            'messages1' => null,
            'pages' => null,
            'services' => null,
            'userEmails' => null,
            'userPlans' => null,
            'userSkills' => null
        );
        }

    public function search()
        {
        $criteria = new CDbCriteria ();

        $criteria->compare('id', $this->id);
        $criteria->compare('first_name', $this->first_name, true);
        $criteria->compare('last_name', $this->last_name, true);
        $criteria->compare('email', $this->email, true);
        $criteria->compare('password', $this->password, true);
        $criteria->compare('phone_no', $this->phone_no, true);
        $criteria->compare('language', $this->language, true);
        $criteria->compare('nationality', $this->nationality, true);
        $criteria->compare('date_of_birth', $this->date_of_birth, true);
        $criteria->compare('work_in_abroad', $this->work_in_abroad);
        $criteria->compare('salary', $this->salary);
        $criteria->compare('martial_status', $this->martial_status);
        $criteria->compare('employment', $this->employment, true);
        $criteria->compare('experience', $this->experience);
        $criteria->compare('religion', $this->religion, true);
        $criteria->compare('address', $this->address, true);
        $criteria->compare('city', $this->city, true);
        $criteria->compare('country', $this->country, true);
        $criteria->compare('zip_code', $this->zip_code);
        $criteria->compare('currency_type', $this->currency_type);
        $criteria->compare('timezone', $this->timezone, true);
        $criteria->compare('about_me', $this->about_me, true);
        $criteria->compare('image_file', $this->image_file, true);
        $criteria->compare('lat', $this->lat, true);
        $criteria->compare('long', $this->long, true);
        $criteria->compare('tos', $this->tos);
        $criteria->compare('role_id', $this->role_id);
        $criteria->compare('state_id', $this->state_id);
        $criteria->compare('last_visit_time', $this->last_visit_time, true);
        $criteria->compare('activation_key', $this->activation_key, true);
        $criteria->compare('login_error_count', $this->login_error_count);
        $criteria->compare('employer_id', $this->employer_id);
        $criteria->compare('create_user_id', $this->create_user_id);
        $criteria->compare('create_time', $this->create_time, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria
        ));
        }

    }
